!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("MyLib",[],e):"object"==typeof exports?exports.MyLib=e():t.MyLib=e()}(window,function(){return function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e),n.d(e,"default",function(){return o});const i={offset:.1*window.innerWidth};class o extends Phaser.Plugins.BasePlugin{constructor(t){super(t),this.UP="up",this.RIGHT="right",this.DOWN="down",this.LEFT="left",this.config=i}init(t){this.configure(t),this.game.canvas.addEventListener("touchstart",this.onTouchstart.bind(this)),this.game.canvas.addEventListener("touchend",this.onTouchend.bind(this))}onTouchstart(t){const e=this.getTouch(t);this.xDown=e.clientX,this.yDown=e.clientY}onTouchend(t){if(!this.xDown||!this.yDown)return;const{clientX:e,clientY:n}=this.getTouch(t),i=this.xDown-e,o=this.yDown-n,r=Math.abs(this.xDown-e),s=Math.abs(this.yDown-n);Math.max(r,s)<this.config.offset||(r>s?this.sendEvent(i>0?this.LEFT:this.RIGHT):this.sendEvent(o>0?this.UP:this.DOWN))}getTouch(t){return t.changedTouches[0]}configure(t){Object.assign(this.config,t)}sendEvent(t){this.game.events.emit("swipe",t)}}}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,